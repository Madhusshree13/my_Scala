// variable
var name = "foo"  name = "bar"
// value  val age = 18  age = 20


//if else
val name = "Rimaz"
>	name: String = Rimaz  if(name.length() == 1 * 4){  "*"
} else{
"#"
}
>	res0: String = #
val name = "KNTU"
>	name: String = KNTU
if(name.length == 1.*(4)) "*" else "#"
>	res0: String = *

//do while
var count = 0
while(count < 10) count+=1
var count = 0
do count+=2 while(count<10)

//collections(ranges)
val range=1 to 10
>	range: scala.collection.immutable.Range.Inclusive = Range 1 to 10
println(range.last) // 10
val range2 = 1 until 10
>	range2: scala.collection.immutable.Range = Range 1 until 10
println(range2.last) // 9
val range3 = 1 until 10 by 3
>	range3: scala.collection.immutable.Range = Range 1 until 10 by 3
println(range3.last) // 7

//Tuples
var tuples=(2*5,"ten",10.0d,10.0f,10.0,(9,"NINE"))
>	tuples: (Int, String, Double, Float, Double, (Int, String))
= (10,ten,10.0,10.0,10.0,(9,NINE))
print(tuples._1)
>	10
print(tuples._2)
>	ten
print(tuples._6._2)
>	NINE

//lists
var lst=List("b","c","d")
>	lst: List[String] = List(b, c, d)
print(lst.head)
>	b
print(lst.tail)
>	List(c, d)
var lst2="a"::lst
>	lst2: List[String] = List(a, b, c, d)


//Arrays
var array=new Array[String](3)
>	array: Array[String] = Array(null, null, null)
var at=Array(4,4.7,"Gasai Yuno")
>	at: Array[Any] = Array(4, 4.7, Gasai Yuno)
val mat = Array.ofDim[Int](3,4)  mat(1)(2) = 3
